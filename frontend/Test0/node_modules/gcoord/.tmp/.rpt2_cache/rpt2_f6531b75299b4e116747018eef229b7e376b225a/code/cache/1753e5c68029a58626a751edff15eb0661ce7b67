{"code":"// https://github.com/Turfjs/turf/blob/master/packages/turf-projection/index.ts\r\nvar R2D = 180 / Math.PI;\r\nvar D2R = Math.PI / 180;\r\nvar A = 6378137.0;\r\nvar MAXEXTENT = 20037508.342789244;\r\nexport function ESPG3857ToWGS84(xy) {\r\n    return [\r\n        (xy[0] * R2D / A),\r\n        ((Math.PI * 0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D,\r\n    ];\r\n}\r\nexport function WGS84ToEPSG3857(lonLat) {\r\n    // compensate longitudes passing the 180th meridian\r\n    // from https://github.com/proj4js/proj4js/blob/master/lib/common/adjust_lon.js\r\n    var adjusted = (Math.abs(lonLat[0]) <= 180) ? lonLat[0] : (lonLat[0] - ((lonLat[0] < 0 ? -1 : 1) * 360));\r\n    var xy = [\r\n        A * adjusted * D2R,\r\n        A * Math.log(Math.tan((Math.PI * 0.25) + (0.5 * lonLat[1] * D2R))),\r\n    ];\r\n    // if xy value is beyond maxextent (e.g. poles), return maxextent\r\n    if (xy[0] > MAXEXTENT)\r\n        xy[0] = MAXEXTENT;\r\n    if (xy[0] < -MAXEXTENT)\r\n        xy[0] = -MAXEXTENT;\r\n    if (xy[1] > MAXEXTENT)\r\n        xy[1] = MAXEXTENT;\r\n    if (xy[1] < -MAXEXTENT)\r\n        xy[1] = -MAXEXTENT;\r\n    return xy;\r\n}\r\n","dts":{"name":"D:/work/gcoord/dist/types/crs/EPSG3857.d.ts","writeByteOrderMark":false,"text":"import { Position } from '../geojson';\r\nexport declare function ESPG3857ToWGS84(xy: Position): Position;\r\nexport declare function WGS84ToEPSG3857(lonLat: Position): Position;\r\n"}}
